[gd_scene load_steps=6 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;
render_mode unshaded;

uniform sampler2D sky_gradient;
uniform float diameter = 100.0;
uniform float band_width = 0.2;

float dist_from_sun(vec3 position) {
	float radius = diameter / 2.0;
	return -1.0;
}

void fragment() {
	vec4 world_frag_pos = CAMERA_MATRIX * vec4(VERTEX, 1.0);
	vec3 sampled_color = texture(sky_gradient, vec2(0, 0)).rgb;
	vec3 world_normal = NORMAL * mat3(INV_CAMERA_MATRIX);
	ALBEDO = sampled_color;
	
	if(world_normal.y < 0.0) {
		ALBEDO = sampled_color - vec3(0.04);
	}
}"

[sub_resource type="Gradient" id=4]
offsets = PoolRealArray( 0, 0.14, 0.28, 0.4, 0.49, 0.62, 0.75, 1 )
colors = PoolColorArray( 0.670588, 0.721569, 0.741176, 1, 0.670588, 0.721569, 0.741176, 1, 0.972549, 0.901961, 0.619608, 1, 0.945098, 0.819608, 0.568627, 1, 0.741176, 0.235294, 0.192157, 1, 0.439216, 0.301961, 0.407843, 1, 0.227451, 0.258824, 0.431373, 1, 0.027451, 0.0431373, 0.196078, 1 )

[sub_resource type="GradientTexture" id=5]
gradient = SubResource( 4 )

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/diameter = 100.0
shader_param/band_width = 0.2
shader_param/sky_gradient = SubResource( 5 )

[sub_resource type="SphereMesh" id=3]
material = SubResource( 2 )

[node name="Cloud" type="Spatial"]

[node name="Particles" type="Particles" parent="."]
draw_pass_1 = SubResource( 3 )
